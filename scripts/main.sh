#!/bin/bash

CONFIG_DIR="./config"
RUN_SCRIPT_URL="https://raw.githubusercontent.com/kalentivan/run_script/master/scripts/run.sh"

# –§—É–Ω–∫—Ü–∏—è –∑–∞–ø–∏—Å–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤ run.sh
# –î–æ–±–∞–≤–ª—è–µ–º CONTAINERS –≤ ENV_VARS
ENV_VARS=(
  "FOLDER"
  "REPO"
  "NET"
  "IMAGE"
  "BASE_ENV"
  "BRANCH"
  "LOAD_DOCKER"
  "DEL_PROJECT"
  "CONTAINERS"
)

# –§—É–Ω–∫—Ü–∏—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è run.sh —Å –∑–∞–ø—Ä–æ—Å–æ–º –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
download_run_script() {
  read -rp "–í–≤–µ–¥–∏—Ç–µ –∏–º—è –¥–ª—è —Å–∫–∞—á–∞–Ω–Ω–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, run.sh): " RUN_SCRIPT_NAME
  RUN_SCRIPT_PATH="./$RUN_SCRIPT_NAME"

  echo "‚¨áÔ∏è –°–∫–∞—á–∏–≤–∞–µ–º —Å–∫—Ä–∏–ø—Ç –≤ —Ñ–∞–π–ª $RUN_SCRIPT_PATH ..."
  curl -fsSL "$RUN_SCRIPT_URL" -o "$RUN_SCRIPT_PATH"
  if [ $? -ne 0 ]; then
    echo "‚ùå –û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è $RUN_SCRIPT_PATH"
    exit 1
  fi
  echo "‚úÖ –°–∫—Ä–∏–ø—Ç —Å–∫–∞—á–∞–Ω –∫–∞–∫ $RUN_SCRIPT_PATH"
}

# –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—Ä–æ—Å–∞ –∏–º–µ–Ω–∏ .env —Ñ–∞–π–ª–∞ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞ –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏
ask_env_name() {
  read -rp "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è .env —Ñ–∞–π–ª–∞ (–±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω $CONFIG_DIR/<–Ω–∞–∑–≤–∞–Ω–∏–µ>.env): " ENV_NAME
  ENV_PATH="$CONFIG_DIR/${ENV_NAME}.env"
  mkdir -p "$CONFIG_DIR"

  if [ ! -f "$ENV_PATH" ]; then
    echo "–§–∞–π–ª $ENV_PATH –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞—ë–º —à–∞–±–ª–æ–Ω —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏..."
    {
      echo "# –§–∞–π–ª —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è run.sh"
      for var in "${ENV_VARS[@]}"; do
        # BASE_ENV –æ—Å—Ç–∞–≤–ª—è–µ–º –ø—É—Å—Ç—ã–º, –æ–Ω –±—É–¥–µ—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω –ø–æ–∑–∂–µ
        if [ "$var" = "BASE_ENV" ]; then
          echo "$var="
        else
          echo "$var="
        fi
      done
    } > "$ENV_PATH"
  else
    echo "–§–∞–π–ª $ENV_PATH –Ω–∞–π–¥–µ–Ω –∏ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω."
  fi
}

# –§—É–Ω–∫—Ü–∏—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è .env —Ñ–∞–π–ª–∞ –∏–ª–∏ –ø–æ–æ—á–µ—Ä–µ–¥–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
edit_or_fill_env_file() {
  read -rp "üìù –•–æ—Ç–∏—Ç–µ –∑–∞–ø–æ–ª–Ω–∏—Ç—å $ENV_PATH —Å–µ–π—á–∞—Å? (y/n): " answer
  if [[ "$answer" =~ ^[Yy]$ ]]; then
    echo "–û—Ç–∫—Ä—ã–≤–∞—é $ENV_PATH –≤ nano —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É..."
    sleep 1
    ${EDITOR:-nano} "$ENV_PATH"
  else
    echo "–ü–æ–æ—á–µ—Ä—ë–¥–Ω–æ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö:"
    for var in "${ENV_VARS[@]}"; do
      # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º BASE_ENV - –æ–Ω –±—É–¥–µ—Ç –∑–∞–¥–∞–Ω –≤ run.sh
      if [ "$var" = "BASE_ENV" ]; then
        continue
      fi

      # –¢–µ–∫—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ —Ñ–∞–π–ª–∞
      current_value=$(grep -E "^$var=" "$ENV_PATH" | head -1 | cut -d '=' -f2-)

      read -rp "$var [—Ç–µ–∫—É—â–µ–µ: $current_value]: " input_value
      input_value="${input_value:-$current_value}"

      if grep -q "^$var=" "$ENV_PATH"; then
        sed -i "s|^$var=.*|$var=$input_value|" "$ENV_PATH"
      else
        echo "$var=$input_value" >> "$ENV_PATH"
      fi
    done
  fi
}

# –§—É–Ω–∫—Ü–∏—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏–∑ —Å–∫–∞—á–∞–Ω–Ω–æ–≥–æ run.sh (–µ—Å–ª–∏ –Ω—É–∂–Ω–∞)
extract_vars_from_run() {
  VARS=($(grep -oP '^\s*export\s+\K[A-Z0-9_]+(?==)' "$RUN_SCRIPT_PATH" | sort -u))
  if [ ${#VARS[@]} -eq 0 ]; then
    echo "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤ $RUN_SCRIPT_PATH"
  fi
}

# –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—Ä–æ—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤, –ø–æ–∫–∞ –Ω–µ –≤–≤–µ–¥—É—Ç 'n'
ask_containers() {
  local containers=()
  while true; do
    read -rp "–í–≤–µ–¥–∏—Ç–µ –∏–º—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è (–∏–ª–∏ 'n' –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è): " c
    if [[ "$c" == "n" ]]; then
      break
    elif [[ -n "$c" ]]; then
      containers+=("$c")
    fi
  done
  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª
  echo "${containers[*]}"
}

# –í —Ñ—É–Ω–∫—Ü–∏–∏ edit_or_fill_env_file –¥–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ CONTAINERS
edit_or_fill_env_file() {
  read -rp "üìù –•–æ—Ç–∏—Ç–µ –∑–∞–ø–æ–ª–Ω–∏—Ç—å $ENV_PATH —Å–µ–π—á–∞—Å? (y/n): " answer
  if [[ "$answer" =~ ^[Yy]$ ]]; then
    echo "–û—Ç–∫—Ä—ã–≤–∞—é $ENV_PATH –≤ nano —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É..."
    sleep 1
    ${EDITOR:-nano} "$ENV_PATH"
  else
    echo "–ü–æ–æ—á–µ—Ä—ë–¥–Ω–æ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö:"
    for var in "${ENV_VARS[@]}"; do
      # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º BASE_ENV - –æ–Ω –±—É–¥–µ—Ç –∑–∞–¥–∞–Ω –≤ run.sh
      if [ "$var" = "BASE_ENV" ]; then
        continue
      fi

      # –¢–µ–∫—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ —Ñ–∞–π–ª–∞
      current_value=$(grep -E "^$var=" "$ENV_PATH" | head -1 | cut -d '=' -f2-)

      # –î–ª—è CONTAINERS –∑–∞–ø—É—Å–∫–∞–µ–º –æ—Ç–¥–µ–ª—å–Ω—ã–π –≤–≤–æ–¥
      if [ "$var" = "CONTAINERS" ]; then
        echo "–¢–µ–∫—É—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã: $current_value"
        echo "–ù–∞—á–∏–Ω–∞–µ–º –≤–≤–æ–¥ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ (–≤–≤–æ–¥–∏—Ç–µ 'n' –¥–ª—è –æ–∫–æ–Ω—á–∞–Ω–∏—è):"
        containers_input=$(ask_containers)
        input_value="${containers_input:-$current_value}"
      else
        read -rp "$var [—Ç–µ–∫—É—â–µ–µ: $current_value]: " input_value
        input_value="${input_value:-$current_value}"
      fi

      if grep -q "^$var=" "$ENV_PATH"; then
        sed -i "s|^$var=.*|$var=$input_value|" "$ENV_PATH"
      else
        echo "$var=$input_value" >> "$ENV_PATH"
      fi
    done
  fi
}

# –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É CONTAINERS –≤ fill_vars_in_run
fill_vars_in_run() {
  local base_env_value="$1"

  declare -A VARS_DESC=(
    ["FOLDER"]="üìÅ –£–∫–∞–∂–∏—Ç–µ –ø–∞–ø–∫—É –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞"
    ["REPO"]="üîó –£–∫–∞–∂–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π"
    ["NET"]="üåê –£–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ Docker-—Å–µ—Ç–∏"
    ["IMAGE"]="üê≥ –£–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ Docker-–æ–±—Ä–∞–∑–∞"
    # BASE_ENV –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–ø—Ä–æ—Å
    ["BRANCH"]="üåø –£–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–µ—Ç–∫–∏ Git"
    ["LOAD_DOCKER"]="‚öôÔ∏è –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Docker? (y/n)"
    ["DEL_PROJECT"]="üßπ –£–¥–∞–ª–∏—Ç—å —Ç–µ–∫—É—â—É—é –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞? (y/n)"
    ["CONTAINERS"]="üì¶ –£–∫–∞–∂–∏—Ç–µ —Å–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª"
  )

  for var in "${!VARS_DESC[@]}"; do
    current_value=$(grep -oP "^export $var=\K.*" "$RUN_SCRIPT_PATH" | head -1 | tr -d '"')
    read -rp "${VARS_DESC[$var]} [—Ç–µ–∫—É—â–µ–µ: $current_value]: " input_value
    input_value="${input_value:-$current_value}"
    if grep -q "^export $var=" "$RUN_SCRIPT_PATH"; then
      sed -i "s|^export $var=.*|export $var=\"$input_value\"|" "$RUN_SCRIPT_PATH"
    else
      echo "export $var=\"$input_value\"" >> "$RUN_SCRIPT_PATH"
    fi
  done

  # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º BASE_ENV –±–µ–∑ –∑–∞–ø—Ä–æ—Å–∞
  if grep -q "^export BASE_ENV=" "$RUN_SCRIPT_PATH"; then
    sed -i "s|^export BASE_ENV=.*|export BASE_ENV=\"$base_env_value\"|" "$RUN_SCRIPT_PATH"
  else
    echo "export BASE_ENV=\"$base_env_value\"" >> "$RUN_SCRIPT_PATH"
  fi
}

make_run_executable() {
  chmod +x "$RUN_SCRIPT_PATH"
}

main() {
  download_run_script
  ask_env_name
  edit_or_fill_env_file
  extract_vars_from_run
  fill_vars_in_run "$ENV_PATH"
  make_run_executable

  echo -e "\n‚úÖ –°–∫—Ä–∏–ø—Ç $RUN_SCRIPT_PATH –≥–æ—Ç–æ–≤ –∫ –∑–∞–ø—É—Å–∫—É."
  echo "üìÅ –í–∞—à —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: $ENV_PATH"
  echo "–î–ª—è –∑–∞–ø—É—Å–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ $RUN_SCRIPT_PATH"
}

main "$@"
