#!/bin/bash

CONFIG_DIR="./config"
RUN_SCRIPT_URL="https://raw.githubusercontent.com/kalentivan/run_script/master/scripts/run.sh"
RUN_ENV_URL="https://raw.githubusercontent.com/kalentivan/run_script/master/scripts/run.env"

download_run_script() {
  read -rp "–í–≤–µ–¥–∏—Ç–µ –∏–º—è –¥–ª—è —Å–∫–∞—á–∞–Ω–Ω–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, run.sh): " RUN_SCRIPT_NAME
  RUN_SCRIPT_PATH="./$RUN_SCRIPT_NAME"

  echo "‚¨áÔ∏è –°–∫–∞—á–∏–≤–∞–µ–º —Å–∫—Ä–∏–ø—Ç –≤ —Ñ–∞–π–ª $RUN_SCRIPT_PATH ..."
  curl -fsSL "$RUN_SCRIPT_URL" -o "$RUN_SCRIPT_PATH"
  if [ $? -ne 0 ]; then
    echo "‚ùå –û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è $RUN_SCRIPT_PATH"
    exit 1
  fi
  echo "‚úÖ –°–∫—Ä–∏–ø—Ç —Å–∫–∞—á–∞–Ω –∫–∞–∫ $RUN_SCRIPT_PATH"
}

download_docker_env() {
  mkdir -p "$CONFIG_DIR"
  read -rp "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è Docker .env —Ñ–∞–π–ª–∞ (–±–µ–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è, –Ω–∞–ø—Ä–∏–º–µ—Ä s): " DOCKER_ENV_NAME

  if [[ "$DOCKER_ENV_NAME" == *.env ]]; then
    DOCKER_ENV_PATH="$CONFIG_DIR/$DOCKER_ENV_NAME"
    DOCKER_ENV_NAME="${DOCKER_ENV_NAME%.env}"
  else
    DOCKER_ENV_PATH="$CONFIG_DIR/${DOCKER_ENV_NAME}.env"
  fi

  if [ -f "$DOCKER_ENV_PATH" ]; then
    echo "–§–∞–π–ª $DOCKER_ENV_PATH —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω."
  else
    echo "–°–æ–∑–¥–∞—ë–º –ø—É—Å—Ç–æ–π —Ñ–∞–π–ª $DOCKER_ENV_PATH –¥–ª—è Docker –ø—Ä–æ–µ–∫—Ç–∞."
    touch "$DOCKER_ENV_PATH"
  fi

  read -rp "üìù –•–æ—Ç–∏—Ç–µ –æ—Ç–∫—Ä—ã—Ç—å $DOCKER_ENV_PATH –≤ nano –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è? (y/n): " answer
  if [[ "$answer" =~ ^[Yy]$ ]]; then
    echo "–û—Ç–∫—Ä—ã–≤–∞—é $DOCKER_ENV_PATH –≤ nano..."
    ${EDITOR:-nano} "$DOCKER_ENV_PATH"
  else
    echo "–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –±–µ–∑ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Docker .env —Ñ–∞–π–ª–∞."
  fi
}

download_and_edit_run_env() {
  RUN_ENV_PATH="$CONFIG_DIR/${DOCKER_ENV_NAME}_run.env"
  echo "‚¨áÔ∏è –°–∫–∞—á–∏–≤–∞–µ–º run.env –¥–ª—è —Å–∫—Ä–∏–ø—Ç–∞ –≤ $RUN_ENV_PATH ..."
  curl -fsSL "$RUN_ENV_URL" -o "$RUN_ENV_PATH"
  if [ $? -ne 0 ]; then
    echo "‚ùå –û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è $RUN_ENV_PATH"
    exit 1
  fi
  echo "‚úÖ –®–∞–±–ª–æ–Ω run.env —Å–∫–∞—á–∞–Ω –≤ $RUN_ENV_PATH"
  echo "üìù –û—Ç–∫—Ä—ã–≤–∞—é $RUN_ENV_PATH –≤ nano —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É –¥–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–≥–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è..."
  sleep 1
  ${EDITOR:-nano} "$RUN_ENV_PATH"
}

replace_base_env_in_run() {
  local env_escaped=$(echo "$RUN_ENV_PATH" | sed 's/[\/&]/\\&/g')

  if grep -q "^export BASE_ENV=" "$RUN_SCRIPT_PATH"; then
    sed -i "s|^export BASE_ENV=.*|export BASE_ENV=\"$env_escaped\"|" "$RUN_SCRIPT_PATH"
    echo "‚úÖ BASE_ENV –≤ $RUN_SCRIPT_PATH –∑–∞–º–µ–Ω—ë–Ω –Ω–∞ \"$RUN_ENV_PATH\""
  else
    echo "export BASE_ENV=\"$RUN_ENV_PATH\"" >> "$RUN_SCRIPT_PATH"
    echo "‚úÖ BASE_ENV –¥–æ–±–∞–≤–ª–µ–Ω –≤ $RUN_SCRIPT_PATH"
  fi
}

make_run_executable() {
  chmod +x "$RUN_SCRIPT_PATH"
}

create_ssh_key() {
  read -rp "üîê –•–æ—Ç–∏—Ç–µ —Å–æ–∑–¥–∞—Ç—å SSH –∫–ª—é—á –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—é? (y/n): " answer
  if [[ "$answer" =~ ^[Yy]$ ]]; then
    read -rp "–í–≤–µ–¥–∏—Ç–µ –∏–º—è —Ñ–∞–π–ª–∞ –∫–ª—é—á–∞ (–±–µ–∑ –ø—É—Ç–∏ –∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è, –Ω–∞–ø—Ä–∏–º–µ—Ä myproject): " key_name
    key_name="${key_name:-id_rsa}"
    key_path="$HOME/.ssh/$key_name"

    if [ -f "$key_path" ] || [ -f "${key_path}.pub" ]; then
      echo "‚ö†Ô∏è –§–∞–π–ª –∫–ª—é—á–∞ $key_path –∏–ª–∏ $key_path.pub —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!"
      read -rp "–ü–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å? (y/n): " overwrite
      if ! [[ "$overwrite" =~ ^[Yy]$ ]]; then
        echo "–û—Ç–º–µ–Ω–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª—é—á–∞."
        return
      fi
    fi

    ssh-keygen -t rsa -b 4096 -C "run_script_key" -f "$key_path"
    if [ $? -eq 0 ]; then
      echo "‚úÖ SSH –∫–ª—é—á —Å–æ–∑–¥–∞–Ω: $key_path"
      echo "üîë –ü—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á:"
      cat "${key_path}.pub"
      echo "–î–æ–±–∞–≤—å—Ç–µ —ç—Ç–æ—Ç –∫–ª—é—á –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ—Å—Ç—É–ø–∞ –≤–∞—à–µ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è."

      # –û–±–Ω–æ–≤–ª—è–µ–º run.sh –∏–ª–∏ run.env ‚Äî –Ω–∞–ø—Ä–∏–º–µ—Ä, –∑–¥–µ—Å—å run.sh
      local escaped_key_path=$(echo "$key_path" | sed 's/[\/&]/\\&/g')
      if grep -q "^export SSH_KEY_PATH=" "$RUN_SCRIPT_PATH"; then
        sed -i "s|^export SSH_KEY_PATH=.*|export SSH_KEY_PATH=\"$escaped_key_path\"|" "$RUN_SCRIPT_PATH"
      else
        echo "export SSH_KEY_PATH=\"$key_path\"" >> "$RUN_SCRIPT_PATH"
      fi

      echo "‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è SSH_KEY_PATH –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ $RUN_SCRIPT_PATH"
    else
      echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ SSH –∫–ª—é—á–∞."
    fi
  else
    echo "–°–æ–∑–¥–∞–Ω–∏–µ SSH –∫–ª—é—á–∞ –ø—Ä–æ–ø—É—â–µ–Ω–æ."
  fi
}

main() {
  download_run_script
  download_docker_env
  download_and_edit_run_env
  create_ssh_key
  replace_base_env_in_run
  make_run_executable

  echo -e "\n‚úÖ –°–∫—Ä–∏–ø—Ç $RUN_SCRIPT_PATH –≥–æ—Ç–æ–≤ –∫ –∑–∞–ø—É—Å–∫—É."
  echo "üìÅ –í–∞—à Docker .env —Ñ–∞–π–ª: $DOCKER_ENV_PATH"
  echo "üìÅ –í–∞—à run.env –¥–ª—è —Å–∫—Ä–∏–ø—Ç–∞: $RUN_ENV_PATH"
  echo "–î–ª—è –∑–∞–ø—É—Å–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ $RUN_SCRIPT_PATH"
}

main "$@"
